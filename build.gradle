plugins {
    alias(libs.plugins.runtime)
    alias(libs.plugins.shadow)
    id 'java'
    id 'jacoco'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation libs.gson
    implementation libs.imageio.bmp
    implementation libs.imageio.jpeg
    implementation libs.imageio.psd
    implementation libs.imageio.webp
    implementation libs.imgscalr
    implementation libs.jave
    implementation libs.logback.classic
    implementation libs.logback.core
    implementation libs.pngtastic
    implementation libs.slf4j.api
    implementation libs.telegram.bot.api
    implementation libs.tika

    testRuntimeOnly libs.junit.platform
    testImplementation libs.hamcrest
    testImplementation libs.junit
    testImplementation libs.mockwebserver

    constraints {
        implementation(libs.okio) {
            because 'CVE-2023-3635: Okio Signed to Unsigned Conversion Error vulnerability'
        }
    }
}

jacocoTestReport {
    reports {
        html.required = false
        xml.required = true
        xml.outputLocation = file(".qodana/code-coverage/report.xml")
    }

    afterEvaluate {
        classDirectories = files(classDirectories.files.collect {
            fileTree(dir: it, exclude: ['**/ThreadIdConverter.class',
                                        '**/MediaConstraints.class',
                                        '**/stickerify/process/**',
                                        '**/stickerify/runner**',
                                        '**/stickerify/telegram/**'])
        })
    }
}

group = 'com.github.stickerifier'
version = '1.0'
description = 'Telegram bot to convert medias in the format required to be used as Telegram stickers'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(22)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

test {
    useJUnitPlatform()
    finalizedBy(jacocoTestReport)
}

application {
    mainClass = 'com.github.stickerifier.stickerify.runner.Main'
}

runtime {
    options = ['--strip-debug', '--no-header-files', '--no-man-pages', '--compress=2']
    modules = ['java.desktop', 'java.naming', 'java.sql', 'jdk.crypto.ec']
}

shadowJar {
    archiveBaseName = 'Stickerify'
    archiveClassifier = 'shadow'
    archiveVersion = ''
    mergeServiceFiles()
}
