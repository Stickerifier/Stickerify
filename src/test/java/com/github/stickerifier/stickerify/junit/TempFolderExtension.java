package com.github.stickerifier.stickerify.junit;

import static org.junit.jupiter.api.Assumptions.abort;

import org.junit.jupiter.api.extension.AfterAllCallback;
import org.junit.jupiter.api.extension.BeforeAllCallback;
import org.junit.jupiter.api.extension.ExtensionContext;

import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;

/**
 * Custom JUnit extension used to clear temp files
 * generated by unit tests during their execution.
 */
public class TempFolderExtension implements BeforeAllCallback, AfterAllCallback {

	private static final String DEFAULT_TEMP_DIR = System.getProperty("java.io.tmpdir");

	private Path tempDirectory;

	@Override
	public void beforeAll(ExtensionContext context) throws IOException {
		if (tempDirectory == null) {
			tempDirectory = Files.createTempDirectory("test_tmp");

			System.setProperty("java.io.tmpdir", tempDirectory.toString());
		}
	}

	@Override
	public void afterAll(ExtensionContext context) throws IOException {
		if (Files.exists(tempDirectory)) {
			System.setProperty("java.io.tmpdir", DEFAULT_TEMP_DIR);

			deleteTempFolder();
		}
	}

	private void deleteTempFolder() throws IOException {
		try (var files = Files.list(tempDirectory)) {
			files.forEach(TempFolderExtension::deleteFile);
		}

		Files.delete(tempDirectory);
	}

	private static void deleteFile(Path path) {
		try {
			Files.delete(path);
		} catch (IOException e) {
			abort("The file could not be deleted from the system.");
		}
	}
}
